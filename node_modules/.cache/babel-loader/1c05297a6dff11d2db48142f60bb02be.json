{"ast":null,"code":"import { say } from \"./index\"; // ____\n// import fs from 'fs';\n\n// fs.readFileSync('todo_list.txt','utf8');\n// ____\nexport const dmMachine0 = {\n  // initial: 'idle',\n  // states: {\n  //     // ...\n  //     idle: {},\n  //     // ...\n  //     who: {\n  //         initial: \"prompt\",\n  //         on: {\n  //             RECOGNISED: [\n  //                 {cond: (context) => \"task\" in (list[context.recResult] || {}),\n  //                 actions: assign((context) => { return { person: list[context.recResult].task } }),\n  //                 target: \"task\"},\n  //                 {cond: (context) => \"idea\" in (list[context.recResult] || {}),\n  //                 actions: assign((context) => { return { person: list[context.recResult].task } }),\n  //                 target: \"idea\"},\n  //                 {cond: (context) => context.recResult === \"help\"},\n  //                 { target: \".nomatch\" }],\n  //         },\n  //         ...misUnderstood(``,  [\"#root.dm1.idle\", \"#root.initial_welcome.help\"])\n  //     },\n  initial: 'idle',\n  states: {\n    idle: {},\n    denial: {\n      initial: \"denial_message\",\n      on: {\n        ENDSPEECH: \"#root.initial_welcome.help.prompt\"\n      },\n      states: {\n        denial_message: {\n          entry: say(\"Welcome to To-do. It will be improved later.\"),\n          on: {\n            ENDSPEECH: \"#root.dm2.idle\"\n          } // always: \"#root.dm3.idle\"\n\n        }\n      } // always: \"idle\"\n\n    }\n  }\n};","map":{"version":3,"sources":["/Users/evelsve/repos/mood-admin/src/dmWriteIn.ts"],"names":["say","dmMachine0","initial","states","idle","denial","on","ENDSPEECH","denial_message","entry"],"mappings":"AACA,SAAQA,GAAR,QAAwD,SAAxD,C,CACA;AACA;;AAIA;AAKA;AACA,OAAO,MAAMC,UAAoD,GAAI;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,EAAE,MAzBwD;AA0BjEC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAGJC,IAAAA,MAAM,EAAE;AACJH,MAAAA,OAAO,EAAE,gBADL;AAEJI,MAAAA,EAAE,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFA;AAGJJ,MAAAA,MAAM,EAAE;AACJK,QAAAA,cAAc,EAAE;AACZC,UAAAA,KAAK,EAAET,GAAG,CAAC,8CAAD,CADE;AAEZM,UAAAA,EAAE,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAFQ,CAGZ;;AAHY;AADZ,OAHJ,CAUR;;AAVQ;AAHJ;AA1ByD,CAA9D","sourcesContent":["import { MachineConfig, send, assign } from \"xstate\";\nimport {say, listen, promptAndAsk, misUnderstood } from \"./index\";\n// ____\n// import fs from 'fs';\nimport { list } from \"./todo_list\"\n\n\n// fs.readFileSync('todo_list.txt','utf8');\n\n\n\n\n// ____\nexport const dmMachine0: MachineConfig<SDSContext, any, SDSEvent> = ({\n    // initial: 'idle',\n    // states: {\n    //     // ...\n    //     idle: {},\n    //     // ...\n    //     who: {\n    //         initial: \"prompt\",\n    //         on: {\n    //             RECOGNISED: [\n    //                 {cond: (context) => \"task\" in (list[context.recResult] || {}),\n    //                 actions: assign((context) => { return { person: list[context.recResult].task } }),\n    //                 target: \"task\"},\n\n    //                 {cond: (context) => \"idea\" in (list[context.recResult] || {}),\n    //                 actions: assign((context) => { return { person: list[context.recResult].task } }),\n    //                 target: \"idea\"},\n\n    //                 {cond: (context) => context.recResult === \"help\"},\n\n    //                 { target: \".nomatch\" }],\n    //         },\n    //         ...misUnderstood(``,  [\"#root.dm1.idle\", \"#root.initial_welcome.help\"])\n    //     },\n\n    initial: 'idle',\n    states: {\n        idle: {},\n\n        denial: {\n            initial: \"denial_message\",\n            on: { ENDSPEECH: \"#root.initial_welcome.help.prompt\"},\n            states: {\n                denial_message: {\n                    entry: say(\"Welcome to To-do. It will be improved later.\"),\n                    on: { ENDSPEECH: \"#root.dm2.idle\" }\n                    // always: \"#root.dm3.idle\"\n                }\n        },\n        // always: \"idle\"\n    }\n\n}})"]},"metadata":{},"sourceType":"module"}