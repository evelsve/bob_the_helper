{"ast":null,"code":"import _slicedToArray from\"/Users/evelsve/repos/mood-admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/evelsve/repos/mood-admin/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import\"./styles.scss\";import*as React from\"react\";import*as ReactDOM from\"react-dom\";import{Machine,send,assign}from\"xstate\";import{useMachine,asEffect}from\"@xstate/react\";import{useSpeechSynthesis,useSpeechRecognition}from'react-speech-kit';import{inspect}from\"@xstate/inspect\";// auto-open this asshole: https://cors-anywhere.herokuapp.com/corsdemo\nimport{dmMachine1}from\"./dmPositive\";import{dmMachine2}from\"./dmNegative\";// NOTE: We created separate grammars for the machines to \n// find answers in the most efficient way possible\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const grammar={\"of course\":{approval:true},\"yes of course\":{approval:true},\"yes\":{approval:true},\"yeah\":{approval:true},\"yup\":{approval:true},\"sure\":{approval:true},// --\n\"no\":{approval:false},\"nah\":{approval:false},\"nope\":{approval:false},\"no way\":{approval:false},\"not sure\":{approval:false},\"of course not\":{approval:false}};export const url_grammar={\"rock\":{url:'https://www.youtube.com/watch?v=A0QkGThnKNQ'},\"metal\":{url:'https://www.youtube.com/watch?v=xnKhsTXoKCI&list=PLhQCJTkrHOwSX8LUnIMgaTq3chP1tiTut'},\"punk\":{url:'https://www.youtube.com/watch?v=xPxsS_-LTe0&list=PLvP_6uwiamDS23WxoCfqY4LBOXF_yF1l9'},\"rap\":{url:'https://www.youtube.com/watch?v=5qm8PH4xAss&list=PLvuMfxvpAQrkzez9insKS8cGPU74sK1Ss'},\"lo-fi\":{url:'https://www.youtube.com/watch?v=5qap5aO4i9A'},\"house\":{url:'https://www.youtube.com/watch?v=cna6C24AJkU'},\"techno\":{url:'https://www.youtube.com/watch?v=bC9_OKu6nBQ'},\"country\":{url:'https://www.youtube.com/watch?v=kI24NNjz2j8'}// ...          \n};export const finished={\"finished\":{finished:true},\"done\":{finished:true},\"I've done the task\":{finished:true},\"I'm finished\":{finished:true}// ...          \n};export const bye={\"quit\":{bye:true},\"turn off\":{bye:true},\"bye\":{bye:true},\"goodbye\":{bye:true}// ...          \n};// window.open(\"https://cors-anywhere.herokuapp.com/corsdemo\")\n// window.open(\"https://statecharts.io/inspect\")\ninspect({url:\"https://statecharts.io/inspect\",iframe:false});// NOTE: created as much universal functions as possible\nexport function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}export function listen(){return send('LISTEN');}export function promptAndAsk(prompt){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:send('LISTEN')}}};}export function promptHelpBye(prompt,idled){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:send('LISTEN')},help:{entry:say(\"We may be miscommunicating.\"),on:{ENDSPEECH:[idled,\"#root.init.help\"]}},goodbye:{entry:say(\"\"),on:{ENDSPEECH:[idled,\"#root.init.goodbye\"]}}}};}export function Endings(saythis,on_end){return{initial:\"prompt\",states:{prompt:{entry:send({type:\"SPEAK\",value:saythis}),on:{ENDSPEECH:on_end}}}};}export function Queries(ondone,onerror){return{invoke:{id:'rasa',src:(context,event)=>nluRequest(context.option),onDone:{actions:[assign((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)],target:ondone},onError:{target:onerror,actions:(context,event)=>console.log(event.data)}}};}export function Conditional(cond1,target1,cond2,target2,elses,idles,saythis){return{initial:\"prompt\",on:{ENDSPEECH:[{cond:context=>context.option===cond1,target:target1},{cond:context=>context.option===cond2,target:target2},{cond:context=>context.option==='help',target:[idles,\"#root.init.help\"]},{cond:context=>context.option==='bye',target:[idles,\"#root.init.goodbye\"]},{target:elses}]},states:{prompt:{entry:send({type:\"SPEAK\",value:saythis})}}};}const saySnippet=send(context=>({type:\"SPEAK\",value:\"\".concat(context.snippet)}));const machine=Machine({id:'root',type:'parallel',states:{// ____________\ninit:{initial:'idle',states:{// ...\nidle:{on:{CLICK:'welcome'}},// ...\nwelcome:_objectSpread({on:{RECOGNISED:{target:\"query\",actions:assign(context=>{return{option:context.recResult};})}}},promptAndAsk(\"Good morning. How are you?\")),query:_objectSpread({},Queries(\"distributor\",'welcome')),// ...\ndistributor:{initial:\"prompt\",on:{ENDSPEECH:[{cond:context=>context.option==='positive',target:[\"#root.dm1.positive\",\"idle\"]},{cond:context=>context.option==='negative',target:[\"#root.dm2.negative\",\"idle\"]},{cond:context=>context.option==='todo',target:[\"#root.dm1.create_do\",\"idle\"]},// REMINDER: delete answer after retraining\n{cond:context=>context.option==='ideas',target:[\"#root.dm1.create_ideas\",\"idle\"]},{cond:context=>context.option==='answer',target:\"bob\"},{cond:context=>context.option==='bob',target:\"bob\"},{cond:context=>context.option==='neutral',target:\"neutral\"},{cond:context=>context.option==='music',target:[\"#root.dm2.negative.choose_music\",\"idle\"]},{cond:context=>context.option==='games',target:[\"#root.dm2.negative.choose_game\",\"idle\"]},{cond:context=>context.option==='entertain',target:[\"#root.dm2.negative.load_entertainment\",\"idle\"]},{cond:context=>context.option==='help',target:\"help\"},{target:\"goodbye\"}]},states:{prompt:{entry:say('Ok.')}}},// ...\nbob:_objectSpread({// NOTE:\n// This part could be developed more, into a seperate machine\n// where the user could try out the limits of adaptivity of this DS\non:{RECOGNISED:{target:\"query\",actions:assign(context=>{return{option:context.recResult};})}}},promptAndAsk(\"I am Bob the Helper. I am limited. Tell me what you'd like to do.\")),// ...\nneutral:_objectSpread({// NOTE: \n// We are aware that this is not efficient.\n// We tried this part to see how the machines interact between themselves. \n// For educational purposes only.\non:{RECOGNISED:{target:\"#root.dm2.negative.choose_music\",actions:assign(context=>{return{option:context.recResult};})}}},promptAndAsk(\"You seem lost. What about listening to some music?\")),// ...\nhelp:_objectSpread({on:{RECOGNISED:[{cond:context=>grammar[context.recResult]!==undefined&&grammar[context.recResult].approval===true,target:\"bob\"},{cond:context=>grammar[context.recResult]!==undefined&&grammar[context.recResult].approval===false,target:\"goodbye\"},{target:\"bob\"}]}},promptAndAsk(\"I feel lost. Would you like to start over?\")),//     // ...\ngoodbye:_objectSpread({},Endings(\"Happy to help out. See you later.\",\"#root.init\"))}},// ____________\ndm1:_objectSpread({},dmMachine1),// ____________\ndm2:_objectSpread({},dmMachine2),// ____________\nasrtts:{initial:'idle',states:{// ...\nidle:{on:{LISTEN:'recognising',SPEAK:{target:'speaking',actions:assign((_context,event)=>{return{ttsAgenda:event.value};})}}},// ...\nrecognising:{initial:'progress',entry:'recStart',exit:'recStop',on:{ASRRESULT:{actions:['recLogResult',assign((_context,event)=>{return{recResult:event.value};})],target:'.match'},RECOGNISED:'idle'},states:{progress:{},match:{entry:send('RECOGNISED')}}},// ...\nspeaking:{entry:'ttsStart',on:{ENDSPEECH:'idle'}}}}}},{actions:{recLogResult:context=>{/* context.recResult = event.recResult; */console.log('<< ASR: '+context.recResult);},test:()=>{console.log('test');},logIntent:context=>{/* context.nluData = event.data */console.log('<< NLU intent: '+context.nluData.intent.name);}}});const ReactiveButton=props=>{switch(true){case props.state.matches({asrtts:'recognising'}):return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},props),{},{children:\"...\"}));case props.state.matches({asrtts:'speaking'}):return/*#__PURE__*/_jsx(\"button\",_objectSpread({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},props));default:return/*#__PURE__*/_jsx(\"button\",_objectSpread(_objectSpread({type:\"button\",className:\"glow-on-hover\"},props),{},{children:\"Click on me\"}));}};function App(){const _useSpeechSynthesis=useSpeechSynthesis({onEnd:()=>{send('ENDSPEECH');}}),speak=_useSpeechSynthesis.speak,cancel=_useSpeechSynthesis.cancel,speaking=_useSpeechSynthesis.speaking;const _useSpeechRecognition=useSpeechRecognition({onResult:result=>{send({type:\"ASRRESULT\",value:result});}}),listen=_useSpeechRecognition.listen,listening=_useSpeechRecognition.listening,stop=_useSpeechRecognition.stop;const _useMachine=useMachine(machine,{devTools:true,actions:{recStart:asEffect(()=>{console.log('Ready to receive a command.');listen({interimResults:false,continuous:true});}),recStop:asEffect(()=>{console.log('Recognition stopped.');stop();}),changeColour:asEffect(context=>{console.log('Repainting...');document.body.style.background=context.recResult;}),ttsStart:asEffect((context,effect)=>{console.log('Speaking...');speak({text:context.ttsAgenda});}),ttsCancel:asEffect((context,effect)=>{console.log('TTS STOP...');cancel();})}}),_useMachine2=_slicedToArray(_useMachine,3),current=_useMachine2[0],send=_useMachine2[1],service=_useMachine2[2];return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(ReactiveButton,{state:current,onClick:()=>send('CLICK')})});};/* RASA API\n *  */const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl='https://mood-admin.herokuapp.com/model/parse';export const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'http://localhost:3000/'},body:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());const rootElement=document.getElementById(\"root\");ReactDOM.render(/*#__PURE__*/_jsx(App,{}),rootElement);","map":{"version":3,"sources":["/Users/evelsve/repos/mood-admin/src/index.tsx"],"names":["React","ReactDOM","Machine","send","assign","useMachine","asEffect","useSpeechSynthesis","useSpeechRecognition","inspect","dmMachine1","dmMachine2","grammar","approval","url_grammar","url","finished","bye","iframe","say","text","_context","type","value","listen","promptAndAsk","prompt","initial","states","entry","on","ENDSPEECH","ask","promptHelpBye","idled","help","goodbye","Endings","saythis","on_end","Queries","ondone","onerror","invoke","id","src","context","event","nluRequest","option","onDone","actions","data","intent","name","console","log","target","onError","Conditional","cond1","target1","cond2","target2","elses","idles","cond","saySnippet","snippet","machine","init","idle","CLICK","welcome","RECOGNISED","recResult","query","distributor","bob","neutral","undefined","dm1","dm2","asrtts","LISTEN","SPEAK","ttsAgenda","recognising","exit","ASRRESULT","progress","match","speaking","recLogResult","test","logIntent","nluData","ReactiveButton","props","state","matches","animation","App","onEnd","speak","cancel","onResult","result","listening","stop","devTools","recStart","interimResults","continuous","recStop","changeColour","document","body","style","background","ttsStart","effect","ttsCancel","current","service","proxyurl","rasaurl","fetch","Request","method","headers","then","json","rootElement","getElementById","render"],"mappings":"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","sourcesContent":["import \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { MachineConfig, Machine, send, Action, assign, State } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\nimport { inspect } from \"@xstate/inspect\";\n\n// auto-open this asshole: https://cors-anywhere.herokuapp.com/corsdemo\n\nimport { dmMachine1 } from \"./dmPositive\";\nimport { dmMachine2 } from \"./dmNegative\";\n\n\n\n\n// NOTE: We created separate grammars for the machines to \n// find answers in the most efficient way possible\nexport const grammar: { [index: string]: {approval?:  boolean } } = \n        {  \"of course\": { approval: true },\n        \"yes of course\": { approval: true },\n        \"yes\": { approval: true },\n        \"yeah\": { approval: true },\n        \"yup\": { approval: true },\n        \"sure\": { approval: true },\n        // --\n        \"no\": { approval: false },\n        \"nah\": { approval: false },\n        \"nope\": { approval: false },\n        \"no way\": { approval: false },\n        \"not sure\": { approval: false },\n        \"of course not\": { approval: false}\n\n        }\n\nexport const url_grammar: { [index: string]: {url:  string } } = \n        {  \"rock\": { url: 'https://www.youtube.com/watch?v=A0QkGThnKNQ' },\n        \"metal\": { url: 'https://www.youtube.com/watch?v=xnKhsTXoKCI&list=PLhQCJTkrHOwSX8LUnIMgaTq3chP1tiTut' },\n        \"punk\": { url: 'https://www.youtube.com/watch?v=xPxsS_-LTe0&list=PLvP_6uwiamDS23WxoCfqY4LBOXF_yF1l9' },\n        \"rap\": { url: 'https://www.youtube.com/watch?v=5qm8PH4xAss&list=PLvuMfxvpAQrkzez9insKS8cGPU74sK1Ss' },\n        \"lo-fi\": { url: 'https://www.youtube.com/watch?v=5qap5aO4i9A'},\n        \"house\": { url: 'https://www.youtube.com/watch?v=cna6C24AJkU' },\n        \"techno\": { url: 'https://www.youtube.com/watch?v=bC9_OKu6nBQ' },\n        \"country\": { url: 'https://www.youtube.com/watch?v=kI24NNjz2j8' }\n        // ...          \n}\n\n\nexport const finished: { [index: string]: {finished?:  boolean } } = \n        {  \"finished\": { finished: true },\n           \"done\": { finished: true },\n           \"I've done the task\": { finished: true },\n           \"I'm finished\": { finished: true }\n           // ...          \n}\n\nexport const bye: { [index: string]: {bye?:  boolean } } = \n        {  \"quit\": { bye: true },\n           \"turn off\": { bye: true },\n           \"bye\": { bye: true },\n           \"goodbye\": { bye: true }\n           // ...          \n}\n\n// window.open(\"https://cors-anywhere.herokuapp.com/corsdemo\")\n// window.open(\"https://statecharts.io/inspect\")\n\ninspect({\n    url: \"https://statecharts.io/inspect\",\n    iframe: false\n});\n\n\n// NOTE: created as much universal functions as possible\n\nexport function say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nexport function listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nexport function promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {entry: send('LISTEN')}\n        }\n    })\n}\n\nexport function promptHelpBye(prompt: string, idled: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {entry: send('LISTEN')\n            },\n            help: {\n                entry: say(\"We may be miscommunicating.\"),\n                on: { ENDSPEECH: [idled,\"#root.init.help\"] }\n            },\n            goodbye:{\n                entry: say(\"\"),\n                on: { ENDSPEECH: [idled,\"#root.init.goodbye\" ] }\n            }\n    }}\n)}\n\n\nexport function Endings(saythis: string, on_end:string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({        \n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: send(({type: \"SPEAK\",\n                    value: saythis})),\n                 on: { ENDSPEECH: on_end }\n            }\n        }    \n    }\n)}\n\nexport function Queries(ondone: string, onerror:string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n            invoke: {\n                id: 'rasa',\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }), \n                    (context: SDSContext, event: any) => console.log(event.data)],\n                    target: ondone\n                },\n                onError: {\n                    target: onerror,\n                    actions: (context, event) => console.log(event.data)}\n                }\n            }\n)}\n\nexport function Conditional(cond1: string, target1: string, cond2: string, target2: string, elses: string, idles: string, saythis: string,): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n                on: {\n                    ENDSPEECH: [\n                            {cond: (context) => context.option === cond1, target: target1},\n                            {cond: (context) => context.option === cond2, target: target2},\n                            {cond: (context) => context.option === 'help', target: [idles,\"#root.init.help\"]},\n                            {cond: (context) => context.option === 'bye', target: [idles,\"#root.init.goodbye\"]},\n                            { target: elses }] \n                        \n                    },\n                states: {\n                    prompt: {\n                        entry: send(({type: \"SPEAK\", value: saythis})),\n                    }\n                }\n            }\n)}\n\n\nconst saySnippet: Action<SDSContext, SDSEvent> = send((context: SDSContext) => ({\n    type: \"SPEAK\", value: `${context.snippet}`\n}))\n\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        // ____________\n        init: {\n            initial: 'idle',\n            states: {\n                // ...\n                idle: {on: {CLICK: 'welcome'}},\n                // ...\n                welcome: {\n                    on: {\n                        RECOGNISED: {\n                            target: \"query\",\n                            actions: assign((context) => { return { option: context.recResult } }),\n                        }},\n                    ...promptAndAsk(\"Good morning. How are you?\")\n                },\n                query: {...Queries(\"distributor\",'welcome')},\n                // ...\n                distributor: {\n                    initial: \"prompt\",\n                    on: {\n                        ENDSPEECH: [\n                            {cond: (context) => context.option === 'positive', target: [\"#root.dm1.positive\", \"idle\"]},\n                            {cond: (context) => context.option === 'negative', target: [\"#root.dm2.negative\", \"idle\"]},\n                            {cond: (context) => context.option === 'todo', target: [\"#root.dm1.create_do\", \"idle\"]},\n                            // REMINDER: delete answer after retraining\n                            {cond: (context) => context.option === 'ideas', target: [\"#root.dm1.create_ideas\", \"idle\"]},\n                            {cond: (context) => context.option === 'answer', target: \"bob\"}, \n                            {cond: (context) => context.option === 'bob', target: \"bob\"},\n                            {cond: (context) => context.option === 'neutral', target: \"neutral\"},\n                            {cond: (context) => context.option === 'music', target: [\"#root.dm2.negative.choose_music\", \"idle\"]},\n                            {cond: (context) => context.option === 'games', target: [\"#root.dm2.negative.choose_game\", \"idle\"]},\n                            {cond: (context) => context.option === 'entertain', target: [\"#root.dm2.negative.load_entertainment\", \"idle\"]},\n\n                            {cond: (context) => context.option === 'help', target: \"help\"},\n\n                            {target: \"goodbye\"} ]\n                        },\n                    states: {\n                        prompt: {\n                            entry: say('Ok.')\n                        }\n                    }\n                },\n                // ...\n                bob: {\n                // NOTE:\n                // This part could be developed more, into a seperate machine\n                // where the user could try out the limits of adaptivity of this DS\n                    on: {\n                        RECOGNISED: {\n                            target: \"query\",\n                            actions: assign((context) => { return { option: context.recResult } }),\n                        }},\n                    ...promptAndAsk(\"I am Bob the Helper. I am limited. Tell me what you'd like to do.\")\n                },\n                // ...\n                neutral: {\n                // NOTE: \n                // We are aware that this is not efficient.\n                // We tried this part to see how the machines interact between themselves. \n                // For educational purposes only.\n                    on: {\n                        RECOGNISED: {\n                            target: \"#root.dm2.negative.choose_music\",\n                            actions: assign((context) => { return { option: context.recResult } }),\n                        }},\n                    ...promptAndAsk(\"You seem lost. What about listening to some music?\")\n                },\n                // ...\n                help: {\n                    on: {\n                        RECOGNISED: [\n                            {cond: (context) => grammar[context.recResult] !== undefined && grammar[context.recResult].approval === true,\n                            target: \"bob\"},\n\n                            {cond: (context) => grammar[context.recResult] !== undefined && grammar[context.recResult].approval === false,\n                            target: \"goodbye\"},\n\n                            {target: \"bob\"}]  \n                    },\n                ...promptAndAsk(\"I feel lost. Would you like to start over?\")\n                },\n            //     // ...\n                goodbye: {...Endings(\"Happy to help out. See you later.\",\"#root.init\")}\n            },\n        },            \n        // ____________\n        dm1: {\n        ...dmMachine1\n        },\n        // ____________\n        dm2: {\n        ...dmMachine2\n        },\n        // ____________\n        asrtts: {\n            initial: 'idle',\n            states: {\n                // ...\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                // ...\n                recognising: {\n\t\t            initial: 'progress',\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: 'idle'\n                    },\n                    states: {\n\t\t    \t        progress: {\n\t\t\t            },\t    \t\t\t\t\t\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                // ...\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }    \n        }\n    }\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        }\n});\n\n\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;\n}\nconst ReactiveButton = (props: Props): JSX.Element => {\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\" }} {...props}>\n                    ...\n                </button>\n            );\n        case props.state.matches({ asrtts: 'speaking' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    \n                </button>\n            );\n        default:\n            return (\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    Click on me\n                </button >\n            );\n    }\n}\n\nfunction App() {\n    const { speak, cancel, speaking } = useSpeechSynthesis({\n        onEnd: () => {\n            send('ENDSPEECH');\n        },\n    });\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {\n            send({ type: \"ASRRESULT\", value: result });\n        },\n    });\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive a command.');\n                listen({\n                    interimResults: false,\n                    continuous: true\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            changeColour: asEffect((context) => {\n                console.log('Repainting...');\n                document.body.style.background = context.recResult;\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda })\n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            }),\n        },\n    });\n\n\n    return (\n        <div className=\"App\">\n            <ReactiveButton state={current} onClick={() => send('CLICK')} />\n        </div>\n    )\n};\n\n\n/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://mood-admin.herokuapp.com/model/parse'\nexport const nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://localhost:3000/' },\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n    rootElement);\n\n\n"]},"metadata":{},"sourceType":"module"}